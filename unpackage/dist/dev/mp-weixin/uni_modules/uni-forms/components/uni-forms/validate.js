"use strict";var p={email:/^\S+?@\S+?\.\S+?$/,idcard:/^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$/,url:new RegExp("^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$","i")};const y={int:"integer",bool:"boolean",double:"number",long:"number",password:"string"};function f(e,t=""){var n=["label"];n.forEach(i=>{e[i]===void 0&&(e[i]="")});let r=t;for(let i in e){let a=new RegExp("{"+i+"}");r=r.replace(a,e[i])}return r}function M(e,t){return!!(e==null||typeof e=="string"&&!e||Array.isArray(e)&&!e.length||t==="object"&&!Object.keys(e).length)}const o={integer(e){return o.number(e)&&parseInt(e,10)===e},string(e){return typeof e=="string"},number(e){return isNaN(e)?!1:typeof e=="number"},boolean:function(e){return typeof e=="boolean"},float:function(e){return o.number(e)&&!o.integer(e)},array(e){return Array.isArray(e)},object(e){return typeof e=="object"&&!o.array(e)},date(e){return e instanceof Date},timestamp(e){return!(!this.integer(e)||Math.abs(e).toString().length>16)},file(e){return typeof e.url=="string"},email(e){return typeof e=="string"&&!!e.match(p.email)&&e.length<255},url(e){return typeof e=="string"&&!!e.match(p.url)},pattern(e,t){try{return new RegExp(e).test(t)}catch{return!1}},method(e){return typeof e=="function"},idcard(e){return typeof e=="string"&&!!e.match(p.idcard)},"url-https"(e){return this.url(e)&&e.startsWith("https://")},"url-scheme"(e){return e.startsWith("://")},"url-web"(e){return!1}};class k{constructor(t){this._message=t}async validateRule(t,n,r,i,a){var s=null;let l=n.rules;if(l.findIndex(m=>m.required)<0&&(r==null||typeof r=="string"&&!r.length))return s;var g=this._message;if(l===void 0)return g.default;for(var h=0;h<l.length;h++){let m=l[h],c=this._getValidateType(m);if(Object.assign(m,{label:n.label||`["${t}"]`}),b[c]&&(s=b[c](m,r,g),s!=null))break;if(m.validateExpr){let x=Date.now();if(m.validateExpr(r,a,x)===!1){s=this._getMessage(m,m.errorMessage||this._message.default);break}}if(m.validateFunction&&(s=await this.validateFunction(m,r,i,a,c),s!==null))break}return s!==null&&(s=g.TAG+s),s}async validateFunction(t,n,r,i,a){let s=null;try{let l=null;const u=await t.validateFunction(t,n,i||r,g=>{l=g});(l||typeof u=="string"&&u||u===!1)&&(s=this._getMessage(t,l||u,a))}catch(l){s=this._getMessage(t,l.message,a)}return s}_getMessage(t,n,r){return f(t,n||t.errorMessage||this._message[r]||n.default)}_getValidateType(t){var n="";return t.required?n="required":t.format?n="format":t.arrayType?n="arrayTypeFormat":t.range?n="range":t.maximum!==void 0||t.minimum!==void 0?n="rangeNumber":t.maxLength!==void 0||t.minLength!==void 0?n="rangeLength":t.pattern?n="pattern":t.validateFunction&&(n="validateFunction"),n}}const b={required(e,t,n){return e.required&&M(t,e.format||typeof t)?f(e,e.errorMessage||n.required):null},range(e,t,n){const{range:r,errorMessage:i}=e;let a=new Array(r.length);for(let l=0;l<r.length;l++){const u=r[l];o.object(u)&&u.value!==void 0?a[l]=u.value:a[l]=u}let s=!1;return Array.isArray(t)?s=new Set(t.concat(a)).size===a.length:a.indexOf(t)>-1&&(s=!0),s?null:f(e,i||n.enum)},rangeNumber(e,t,n){if(!o.number(t))return f(e,e.errorMessage||n.pattern.mismatch);let{minimum:r,maximum:i,exclusiveMinimum:a,exclusiveMaximum:s}=e,l=a?t<=r:t<r,u=s?t>=i:t>i;return r!==void 0&&l?f(e,e.errorMessage||n.number[a?"exclusiveMinimum":"minimum"]):i!==void 0&&u?f(e,e.errorMessage||n.number[s?"exclusiveMaximum":"maximum"]):r!==void 0&&i!==void 0&&(l||u)?f(e,e.errorMessage||n.number.range):null},rangeLength(e,t,n){if(!o.string(t)&&!o.array(t))return f(e,e.errorMessage||n.pattern.mismatch);let r=e.minLength,i=e.maxLength,a=t.length;return r!==void 0&&a<r?f(e,e.errorMessage||n.length.minLength):i!==void 0&&a>i?f(e,e.errorMessage||n.length.maxLength):r!==void 0&&i!==void 0&&(a<r||a>i)?f(e,e.errorMessage||n.length.range):null},pattern(e,t,n){return o.pattern(e.pattern,t)?null:f(e,e.errorMessage||n.pattern.mismatch)},format(e,t,n){var r=Object.keys(o),i=y[e.format]?y[e.format]:e.format||e.arrayType;return r.indexOf(i)>-1&&!o[i](t)?f(e,e.errorMessage||n.typeError):null},arrayTypeFormat(e,t,n){if(!Array.isArray(t))return f(e,e.errorMessage||n.typeError);for(let r=0;r<t.length;r++){const i=t[r];let a=this.format(e,i,n);if(a!==null)return a}return null}};class d extends k{constructor(t,n){super(d.message),this._schema=t,this._options=n||null}updateSchema(t){this._schema=t}async validate(t,n){let r=this._checkFieldInSchema(t);return r||(r=await this.invokeValidate(t,!1,n)),r.length?r[0]:null}async validateAll(t,n){let r=this._checkFieldInSchema(t);return r||(r=await this.invokeValidate(t,!0,n)),r}async validateUpdate(t,n){let r=this._checkFieldInSchema(t);return r||(r=await this.invokeValidateUpdate(t,!1,n)),r.length?r[0]:null}async invokeValidate(t,n,r){let i=[],a=this._schema;for(let s in a){let l=a[s],u=await this.validateRule(s,l,t[s],t,r);if(u!=null&&(i.push({key:s,errorMessage:u}),!n))break}return i}async invokeValidateUpdate(t,n,r){let i=[];for(let a in t){let s=await this.validateRule(a,this._schema[a],t[a],t,r);if(s!=null&&(i.push({key:a,errorMessage:s}),!n))break}return i}_checkFieldInSchema(t){var n=Object.keys(t),r=Object.keys(this._schema);if(new Set(n.concat(r)).size===r.length)return"";var i=n.filter(s=>r.indexOf(s)<0),a=f({field:JSON.stringify(i)},d.message.TAG+d.message.defaultInvalid);return[{key:"invalid",errorMessage:a}]}}function w(){return{TAG:"",default:"验证错误",defaultInvalid:"提交的字段{field}在数据库中并不存在",validateFunction:"验证无效",required:"{label}必填",enum:"{label}超出范围",timestamp:"{label}格式无效",whitespace:"{label}不能为空",typeError:"{label}类型无效",date:{format:"{label}日期{value}格式无效",parse:"{label}日期无法解析,{value}无效",invalid:"{label}日期{value}无效"},length:{minLength:"{label}长度不能少于{minLength}",maxLength:"{label}长度不能超过{maxLength}",range:"{label}必须介于{minLength}和{maxLength}之间"},number:{minimum:"{label}不能小于{minimum}",maximum:"{label}不能大于{maximum}",exclusiveMinimum:"{label}不能小于等于{minimum}",exclusiveMaximum:"{label}不能大于等于{maximum}",range:"{label}必须介于{minimum}and{maximum}之间"},pattern:{mismatch:"{label}格式不匹配"}}}d.message=new w;exports.SchemaValidator=d;
